snippet cl "class .. (class)"
class ${1:`!p snip.rv = snip.basename or "name"`}
{
public:
	explicit ${1/(\w+).*/$1/} (${2:arguments});

	~${1/(\w+).*/$1/} = delete;
	${1/(\w+).*/$1/}(const ${1/(\w+).*/$1/}&) = delete;
	${1/(\w+).*/$1/}& operator=(const ${1/(\w+).*/$1/}&) = delete;
	${1/(\w+).*/$1/}(${1/(\w+).*/$1/}&&) = delete;
	${1/(\w+).*/$1/}& operator=(${1/(\w+).*/$1/}&&) = delete;

private:
	${0:/* data */}
};
endsnippet

snippet ns "namespace .. (namespace)"
namespace${1/.+/ /m}${1:`!p snip.rv = snip.basename or "name"`} {
	${VISUAL}$0
} // namespace $1
endsnippet
# vim:ft=snippets:
